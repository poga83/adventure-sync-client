/* js/config.js */
export const CONFIG = {
  // –û–ë–ù–û–í–õ–ï–ù–û: –ù–æ–≤—ã–π URL —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ Fly.io
  SERVER_URL: 'https://adventure-sync-server.fly.dev',
  FALLBACK_URLS: [
    'https://adventure-sync-server.fly.dev',
    'http://localhost:3000'
  ],
  
  SOCKET: {
    transports: ['websocket', 'polling'],
    timeout: 30000,
    reconnectionAttempts: 15,
    reconnectionDelay: 2000,
    reconnectionDelayMax: 10000,
    pingInterval: 25000,
    pingTimeout: 60000,
    secure: true,
    withCredentials: false,
    upgrade: true,
    rememberUpgrade: true,
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Fly.io
    forceNew: false,
    multiplex: true
  },
  
  MAP: {
    DEFAULT_CENTER: [55.7558, 37.6173],
    DEFAULT_ZOOM: 10,
    TILE_LAYER: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
    ATTRIBUTION: '&copy; OpenStreetMap contributors'
  },
  
  UI: { 
    NOTIFICATION_TIMEOUT: 5000,
    CONNECTION_CHECK_INTERVAL: 30000
  },
  
  ROUTING: {
    PROVIDER: 'openrouteservice',
    API_KEY: '5b3ce3597851110001cf6248a1b8ed27eb8a4e9b9e8bcf0f1cc1c715',
    BASE_URL: 'https://api.openrouteservice.org/v2/directions',
    FALLBACK_URL: 'https://router.project-osrm.org/route/v1',
    PROFILE: 'driving-car',
    FORMAT: 'geojson'
  }
};

// –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Fly.io
export async function pingServer() {
  for (const url of [CONFIG.SERVER_URL, ...CONFIG.FALLBACK_URLS]) {
    try {
      console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Fly.io —Å–µ—Ä–≤–µ—Ä–∞: ${url}`);
      
      const controller = new AbortController();
      const timeoutId = setTimeout(() => controller.abort(), 10000);
      
      const response = await fetch(`${url}/health`, {
        method: 'GET',
        mode: 'cors',
        signal: controller.signal,
        headers: {
          'Accept': 'application/json',
          'Cache-Control': 'no-cache'
        }
      });
      
      clearTimeout(timeoutId);
      
      if (response.ok) {
        const data = await response.json();
        CONFIG.SERVER_URL = url;
        console.log(`‚úÖ Fly.io —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω: ${url}`, data);
        return true;
      }
    } catch (error) {
      console.warn(`‚ö†Ô∏è Fly.io —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ${url}:`, error.message);
    }
  }
  return false;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Fly.io —Ä–µ–≥–∏–æ–Ω–∞
export async function checkFlyRegion() {
  try {
    const response = await fetch(`${CONFIG.SERVER_URL}/`, { mode: 'cors' });
    if (response.ok) {
      const data = await response.json();
      console.log('üåç –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ Fly.io —Å–µ—Ä–≤–µ—Ä—É:', data);
      return data;
    }
  } catch (error) {
    console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Fly.io —Ä–µ–≥–∏–æ–Ω–µ:', error);
  }
  return null;
}
