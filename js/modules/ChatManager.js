class ChatManager {
    constructor(app) {
        this.app = app;
        this.groupMessages = [];
        this.privateMessages = new Map();
        this.isInitialized = false;
    }
    
    initialize() {
        console.log('üí¨ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ChatManager...');
        
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            if (!document.getElementById('messagesList')) {
                console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç messagesList –Ω–µ –Ω–∞–π–¥–µ–Ω');
                return false;
            }
            
            if (!document.getElementById('privateMessagesList')) {
                console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç privateMessagesList –Ω–µ –Ω–∞–π–¥–µ–Ω');
                return false;
            }
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
            this.loadFromCache();
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            this.setupEventListeners();
            
            this.isInitialized = true;
            console.log('‚úÖ ChatManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
            return true;
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ChatManager:', error);
            this.app.notificationManager.showNotification('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —á–∞—Ç–∞', 'error');
            return false;
        }
    }
    
    setupEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ UIManager, –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ
        console.log('üéõÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π —á–∞—Ç–∞...');
    }
    
    loadFromCache() {
        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –≥—Ä—É–ø–ø–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            const cachedGroupMessages = localStorage.getItem(CONFIG.CACHE.MESSAGES_KEY + '_group');
            if (cachedGroupMessages) {
                this.groupMessages = JSON.parse(cachedGroupMessages);
                console.log(`üìã –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${this.groupMessages.length} –≥—Ä—É–ø–ø–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∫—ç—à–∞`);
            }
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            const cachedPrivateMessages = localStorage.getItem(CONFIG.CACHE.MESSAGES_KEY + '_private');
            if (cachedPrivateMessages) {
                const privateData = JSON.parse(cachedPrivateMessages);
                this.privateMessages = new Map(privateData);
                console.log(`üìã –ó–∞–≥—Ä—É–∂–µ–Ω—ã –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫—ç—à–∞`);
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∫—ç—à–∞:', error);
        }
    }
    
    saveToCache() {
        try {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥—Ä—É–ø–ø–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            localStorage.setItem(CONFIG.CACHE.MESSAGES_KEY + '_group', JSON.stringify(this.groupMessages));
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            const privateData = Array.from(this.privateMessages.entries());
            localStorage.setItem(CONFIG.CACHE.MESSAGES_KEY + '_private', JSON.stringify(privateData));
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫—ç—à:', error);
        }
    }
    
    addGroupMessage(message) {
        if (!this.isInitialized) {
            console.warn('‚ö†Ô∏è ChatManager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            return;
        }
        
        try {
            this.groupMessages.push(message);
            
            // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
            if (this.groupMessages.length > 1000) {
                this.groupMessages = this.groupMessages.slice(-1000);
            }
            
            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ UI
            if (this.app.uiManager) {
                this.app.uiManager.addMessageToChat(message, false);
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
            this.saveToCache();
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        }
    }
    
    addPrivateMessage(message) {
        if (!this.isInitialized) {
            console.warn('‚ö†Ô∏è ChatManager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            return;
        }
        
        try {
            const currentUserId = this.app.authManager.getCurrentUser().id;
            const otherUserId = message.senderId === currentUserId ? message.recipientId : message.senderId;
            
            if (!this.privateMessages.has(otherUserId)) {
                this.privateMessages.set(otherUserId, []);
            }
            
            this.privateMessages.get(otherUserId).push(message);
            
            // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
            const messages = this.privateMessages.get(otherUserId);
            if (messages.length > 100) {
                this.privateMessages.set(otherUserId, messages.slice(-100));
            }
            
            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ UI (–µ—Å–ª–∏ —á–∞—Ç –æ—Ç–∫—Ä—ã—Ç)
            if (this.app.uiManager && this.app.uiManager.currentPrivateChat && 
                this.app.uiManager.currentPrivateChat.userId === otherUserId) {
                this.app.uiManager.addMessageToChat(message, true);
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
            this.saveToCache();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ —á–∞—Ç –Ω–µ –æ—Ç–∫—Ä—ã—Ç
            if (!this.app.uiManager.currentPrivateChat || 
                this.app.uiManager.currentPrivateChat.userId !== otherUserId) {
                this.app.notificationManager.showNotification(
                    `–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${message.senderName}`, 'info'
                );
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        }
    }
    
    setGroupChatHistory(messages) {
        if (!this.isInitialized) {
            console.warn('‚ö†Ô∏è ChatManager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            return;
        }
        
        try {
            this.groupMessages = messages || [];
            
            // –û—á–∏—â–∞–µ–º —á–∞—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
            if (this.app.uiManager) {
                this.app.uiManager.clearChat(false);
                this.groupMessages.forEach(message => {
                    this.app.uiManager.addMessageToChat(message, false);
                });
            }
            
            this.saveToCache();
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞:', error);
        }
    }
    
    setPrivateChatHistory(userId, messages) {
        if (!this.isInitialized) {
            console.warn('‚ö†Ô∏è ChatManager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            return;
        }
        
        try {
            this.privateMessages.set(userId, messages || []);
            
            // –ï—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—É—â–∏–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
            if (this.app.uiManager && this.app.uiManager.currentPrivateChat && 
                this.app.uiManager.currentPrivateChat.userId === userId) {
                this.app.uiManager.clearChat(true);
                messages.forEach(message => {
                    this.app.uiManager.addMessageToChat(message, true);
                });
            }
            
            this.saveToCache();
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —á–∞—Ç–∞:', error);
        }
    }
    
    getPrivateMessages(userId) {
        return this.privateMessages.get(userId) || [];
    }
    
    clearAllMessages() {
        this.groupMessages = [];
        this.privateMessages.clear();
        this.saveToCache();
        
        if (this.app.uiManager) {
            this.app.uiManager.clearChat(false);
            this.app.uiManager.clearChat(true);
        }
        
        console.log('üóëÔ∏è –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—á–∏—â–µ–Ω—ã');
    }
}
